{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maria/Desktop/codeclan/codeclan_work/week_15_JS_React_Project/music_visualizer/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Play from './containers/Play.js';\nimport Navbar from './components/Navbar/Navbar.js';\nimport About from './components/About.js';\nimport Footer from './components/Footer/Footer.js';\nimport SongService from './services/SongService';\n\nfunction App() {\n  _s();\n\n  const [playlist, setPlaylist] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n\n  const fetchSongs = () => {\n    console.log(\"getting songs info\");\n    SongService.getSongs().then(data => setPlaylist(data)).then(() => setLoaded(true));\n  };\n\n  const addMusicItem = musicItem => {\n    SongService.postSong(musicItem).then(setPlaylist([...playlist, musicItem]));\n  };\n\n  const deleteById = id => {\n    SongService.deleteSong(id).then(fetchSongs);\n  };\n\n  useEffect(() => {\n    fetchSongs();\n  }, []);\n\n  if (!loaded) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(Play, {\n            playlist: playlist,\n            addPlaylist: musicItem => addMusicItem(musicItem),\n            onDeleteSubmit: deleteById\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          component: About\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"7TIlaTbyesnHls8Scj95jWG/zNg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/maria/Desktop/codeclan/codeclan_work/week_15_JS_React_Project/music_visualizer/client/src/App.js"],"names":["useEffect","useState","BrowserRouter","Router","Route","Switch","Play","Navbar","About","Footer","SongService","App","playlist","setPlaylist","loaded","setLoaded","fetchSongs","console","log","getSongs","then","data","addMusicItem","musicItem","postSong","deleteById","id","deleteSong"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAqD,kBAArD;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMe,UAAU,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAR,IAAAA,WAAW,CAACS,QAAZ,GACCC,IADD,CACMC,IAAI,IAAIR,WAAW,CAACQ,IAAD,CADzB,EAECD,IAFD,CAEM,MAAML,SAAS,CAAC,IAAD,CAFrB;AAGD,GALD;;AAOA,QAAMO,YAAY,GAAIC,SAAD,IAAc;AACjCb,IAAAA,WAAW,CAACc,QAAZ,CAAqBD,SAArB,EACCH,IADD,CACMP,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcW,SAAd,CAAD,CADjB;AAED,GAHD;;AAKA,QAAME,UAAU,GAAIC,EAAD,IAAQ;AACzBhB,IAAAA,WAAW,CAACiB,UAAZ,CAAuBD,EAAvB,EACGN,IADH,CACQJ,UADR;AAED,GAHD;;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAKA,MAAI,CAACF,MAAL,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACI,QAAC,MAAD;AAAA,2BACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,MAAM,EAAE,mBAAM,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAEF,QAAhB;AAA0B,YAAA,WAAW,EAAGW,SAAD,IAAeD,YAAY,CAACC,SAAD,CAAlE;AAAgF,YAAA,cAAc,EAAEE;AAAhG;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAEjB;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAaD;;GA5CQG,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Play from './containers/Play.js';\nimport Navbar from './components/Navbar/Navbar.js';\nimport About from './components/About.js';\nimport Footer from './components/Footer/Footer.js';\nimport SongService from './services/SongService';\n\n\nfunction App() {\n  \n  const [playlist, setPlaylist] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  \n  const fetchSongs = () => {\n    console.log(\"getting songs info\");\n    SongService.getSongs()\n    .then(data => setPlaylist(data))\n    .then(() => setLoaded(true))\n  }\n  \n  const addMusicItem = (musicItem) =>{\n    SongService.postSong(musicItem)\n    .then(setPlaylist([...playlist, musicItem]));\n  }\n  \n  const deleteById = (id) => {\n    SongService.deleteSong(id)\n      .then(fetchSongs)\n  }\n  \n  useEffect(() => {\n    fetchSongs();\n  }, [])\n  \n  \n  if (!loaded) {\n    return <p>Loading...</p>\n  }\n\n  return (\n      <Router>\n        <>\n          <Navbar/>\n          <Switch>\n            <Route exact path=\"/\" render={() => <Play playlist={playlist} addPlaylist={(musicItem) => addMusicItem(musicItem)}  onDeleteSubmit={deleteById}/>} />\n            <Route path=\"/about\" component={About}/>\n            {/* <Route path=\"/user\" component={User}/> */}\n          </Switch>\n          <Footer />\n        </>\n      </Router>\n  );\n}\n  \nexport default App;\n  "]},"metadata":{},"sourceType":"module"}