{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maria/Desktop/codeclan/codeclan_work/week_15_JS_React_Project/music_visualizer/client/src/containers/Play.js\",\n    _s = $RefreshSig$();\n\nimport * as Tone from 'tone';\nimport Instrument from '../containers/Instrument.js';\nimport SongForm from '../components/SongForm.js';\nimport Visual from '../containers/Visual.js';\nimport { useState, useEffect, useCallback } from 'react';\nimport UserPlaylist from '../components/UserPlaylist.js';\nimport React from 'react';\n\nconst Play = ({\n  addPlaylist,\n  playlist,\n  onDeleteSubmit\n}) => {\n  _s();\n\n  const [song, setSong] = useState([]);\n  const [currentSong, setCurrentSong] = useState([]);\n  const [lastKey, setLastKey] = useState(\"\");\n  const [playState, setPlayState] = useState(false);\n  const [isPlayingSong, setIsPlayingSong] = useState(false);\n  const [placeInSong, setPlaceInSong] = useState(0);\n  const [lastTimeout, setLastTimeout] = useState(null);\n  const [isPlayMode, setIsPlayMode] = useState(true);\n  const [isShowingForm, setIsShowingForm] = useState(false);\n  const [isMusicOn, setIsMusicOn] = useState(true);\n  const [text, setText] = useState(\"\");\n  const [keyMap, setKeyMap] = useState({\n    \"q\": {\n      keyPress: \"Q\",\n      note: \"B3\",\n      color: \"DFFF00\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"w\": {\n      keyPress: \"W\",\n      note: \"C#4\",\n      color: \"DE3163\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"e\": {\n      keyPress: \"E\",\n      note: \"D#4\",\n      color: \"6495ED\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"r\": {\n      keyPress: \"R\",\n      note: \"D#4\",\n      color: \"800080\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"t\": {\n      keyPress: \"T\",\n      note: \"F#4\",\n      color: \"6EEB83\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"y\": {\n      keyPress: \"Y\",\n      note: \"G#4\",\n      color: \"C8A2C8\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"u\": {\n      keyPress: \"U\",\n      note: \"B4\",\n      color: \"40E0D0\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"i\": {\n      keyPress: \"I\",\n      note: \"B4\",\n      color: \"FCBA04\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"o\": {\n      keyPress: \"O\",\n      note: \"C#5\",\n      color: \"2479FC\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"p\": {\n      keyPress: \"P\",\n      note: \"D#5\",\n      color: \"00FA9A\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"a\": {\n      keyPress: \"A\",\n      note: \"C4\",\n      color: \"FC2424\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"s\": {\n      keyPress: \"S\",\n      note: \"D4\",\n      color: \"96F550\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"d\": {\n      keyPress: \"D\",\n      note: \"E4\",\n      color: \"FF8C42\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"f\": {\n      keyPress: \"F\",\n      note: \"F4\",\n      color: \"E4FF1A\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"g\": {\n      keyPress: \"G\",\n      note: \"G4\",\n      color: \"6EEB83\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"h\": {\n      keyPress: \"H\",\n      note: \"A4\",\n      color: \"CCCCFF\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"j\": {\n      keyPress: \"J\",\n      note: \"B4\",\n      color: \"6AB547\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"k\": {\n      keyPress: \"K\",\n      note: \"C5\",\n      color: \"EC058E\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"l\": {\n      keyPress: \"L\",\n      note: \"D5\",\n      color: \"4D9DE0\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"'\": {\n      keyPress: \"apostrophe\",\n      note: \"E5\",\n      color: \"F9627D\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"z\": {\n      keyPress: \"Z\",\n      note: \"C3\",\n      color: \"F17021\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"x\": {\n      keyPress: \"X\",\n      note: \"D3\",\n      color: \"EBF121\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"c\": {\n      keyPress: \"C\",\n      note: \"E3\",\n      color: \"90FCDA\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"v\": {\n      keyPress: \"V\",\n      note: \"F3\",\n      color: \"A6B1E1\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"b\": {\n      keyPress: \"B\",\n      note: \"G3\",\n      color: \"FF6F59\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"n\": {\n      keyPress: \"N\",\n      note: \"A3\",\n      color: \"4C6085\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \"m\": {\n      keyPress: \"M\",\n      note: \"B3\",\n      color: \"F662E9\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \",\": {\n      keyPress: \"comma\",\n      note: \"C3\",\n      color: \"90DDFC\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \".\": {\n      keyPress: \"full-stop\",\n      note: \"C4\",\n      color: \"A50104\",\n      shape: \"circle\",\n      beat: \"8n\"\n    },\n    \" \": {\n      keyPress: \"space\",\n      note: \"C4\",\n      color: \"FFFFFF\",\n      shape: \"circle\",\n      beat: \"16n\"\n    }\n  });\n  const handleKeyDown = useCallback(({\n    key\n  }) => playKey(key), []);\n  useEffect(() => {\n    if (isMusicOn) {\n      document.addEventListener('keydown', handleKeyDown);\n    } else {\n      document.removeEventListener('keydown', handleKeyDown);\n    }\n  }, [isMusicOn]);\n  const synth = new Tone.Synth().toDestination();\n\n  const playKey = function (key) {\n    if (!Object.keys(keyMap).includes(key) || !isMusicOn) return;\n\n    if (isMusicOn) {\n      const {\n        note,\n        beat\n      } = keyMap[key];\n      synth.triggerAttackRelease(note, beat);\n      setLastKey(key);\n      setTimeout(() => setLastKey(\"\"), 250);\n    }\n  };\n\n  useEffect(() => {\n    if (!isPlayingSong && lastKey.length === 1) {\n      setSong([...song, lastKey]);\n      setText(song.join(\"\"));\n    }\n  }, [lastKey]);\n\n  const replaySong = (song, index = 0, time = 350) => {\n    if (index >= song.length) {\n      setIsPlayingSong(false);\n      setPlayState(false);\n      return;\n    }\n\n    const currentKey = song[index];\n    playKey(currentKey);\n    setPlaceInSong(index + 1);\n    setLastTimeout(setTimeout(() => replaySong(song, index + 1), time));\n  };\n\n  useEffect(() => {\n    if (isPlayingSong && playState) {\n      replaySong(song, placeInSong);\n    } else if (!playState) {\n      clearTimeout(lastTimeout);\n    } else if (playState) {\n      setIsPlayingSong(true);\n      replaySong(song);\n    }\n  }, [playState]);\n\n  const addFormSong = formSong => {\n    const newSong = {\n      songData: song\n    };\n    const newMusicItem = { ...formSong,\n      songData: song\n    };\n    addPlaylist(newMusicItem);\n    setCurrentSong(newSong.songData);\n    setSong([]);\n  };\n\n  const handlePauseResumeClick = evt => {\n    setPlayState(!isPlayingSong || !playState);\n  };\n\n  const replaySavedSong = data => {\n    replaySong(data, 0, 350);\n  };\n\n  const handleSwitchMode = () => {\n    isPlayMode ? setIsPlayMode(false) : setIsPlayMode(true);\n  };\n\n  const handleSaveForm = () => {\n    isShowingForm ? setIsShowingForm(false) : setIsShowingForm(true);\n    isMusicOn ? setIsMusicOn(false) : setIsMusicOn(true);\n  };\n\n  const handleDeleteNote = () => {\n    song.pop();\n  };\n\n  const Mode = () => {\n    if (isPlayMode) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Instrument, {\n          pads: keyMap,\n          onKeyClick: playKey,\n          lastKey: lastKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePauseResumeClick,\n          children: playState && isPlayingSong ? \"Pause\" : \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Text: \", text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteNote,\n          children: \"Delete last note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveForm,\n          children: \"ADD COMMENTS AND SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n\n    return /*#__PURE__*/_jsxDEV(UserPlaylist, {\n      playlist: playlist,\n      onDeleteSubmit: onDeleteSubmit,\n      onReplaySaveSong: data => replaySavedSong(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }, this);\n  };\n\n  const FormMode = () => {\n    if (isShowingForm) {\n      return /*#__PURE__*/_jsxDEV(SongForm, {\n        onFormSubmit: songForm => addFormSong(songForm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 18\n      }, this);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Visual, {\n      lastKey: lastKey,\n      pads: keyMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Mode, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttons\",\n      onClick: handleSwitchMode,\n      children: [isPlayMode ? \"Show your playlist\" : \"Show keyboard\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormMode, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Play, \"8W7src+PQNP1aga37KAszLj8bqE=\");\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/maria/Desktop/codeclan/codeclan_work/week_15_JS_React_Project/music_visualizer/client/src/containers/Play.js"],"names":["Tone","Instrument","SongForm","Visual","useState","useEffect","useCallback","UserPlaylist","React","Play","addPlaylist","playlist","onDeleteSubmit","song","setSong","currentSong","setCurrentSong","lastKey","setLastKey","playState","setPlayState","isPlayingSong","setIsPlayingSong","placeInSong","setPlaceInSong","lastTimeout","setLastTimeout","isPlayMode","setIsPlayMode","isShowingForm","setIsShowingForm","isMusicOn","setIsMusicOn","text","setText","keyMap","setKeyMap","keyPress","note","color","shape","beat","handleKeyDown","key","playKey","document","addEventListener","removeEventListener","synth","Synth","toDestination","Object","keys","includes","triggerAttackRelease","setTimeout","length","join","replaySong","index","time","currentKey","clearTimeout","addFormSong","formSong","newSong","songData","newMusicItem","handlePauseResumeClick","evt","replaySavedSong","data","handleSwitchMode","handleSaveForm","handleDeleteNote","pop","Mode","FormMode","songForm"],"mappings":"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","sourcesContent":["import * as Tone from 'tone'\nimport Instrument from '../containers/Instrument.js'\nimport SongForm from '../components/SongForm.js'\nimport Visual from '../containers/Visual.js'\nimport {useState, useEffect, useCallback} from 'react'\nimport UserPlaylist from '../components/UserPlaylist.js'\nimport React from 'react'\n\n\n\nconst Play =({addPlaylist, playlist,  onDeleteSubmit}) => {\n   \n    const [song, setSong] = useState([])\n    const [currentSong, setCurrentSong] = useState([])\n    const [lastKey, setLastKey] = useState(\"\")\n\n    const [playState, setPlayState] = useState(false)\n    const [isPlayingSong, setIsPlayingSong] = useState(false)\n    const [placeInSong, setPlaceInSong] = useState(0)\n    const [lastTimeout, setLastTimeout] = useState(null)\n    const [isPlayMode, setIsPlayMode] = useState(true)\n    const [isShowingForm, setIsShowingForm] = useState(false)\n    const [isMusicOn, setIsMusicOn] = useState(true)\n    const [text, setText] = useState(\"\")\n\n    const [keyMap, setKeyMap] = useState({\n        \"q\": {keyPress: \"Q\", note: \"B3\", color: \"DFFF00\", shape: \"circle\", beat:\"8n\"},\n        \"w\": {keyPress: \"W\", note: \"C#4\", color: \"DE3163\", shape: \"circle\", beat:\"8n\"},\n        \"e\": {keyPress: \"E\", note: \"D#4\", color: \"6495ED\", shape: \"circle\", beat:\"8n\"},\n        \"r\": {keyPress: \"R\", note: \"D#4\", color: \"800080\", shape: \"circle\", beat:\"8n\"},\n        \"t\": {keyPress: \"T\", note: \"F#4\", color: \"6EEB83\", shape: \"circle\", beat:\"8n\"},\n        \"y\": {keyPress: \"Y\", note: \"G#4\", color: \"C8A2C8\", shape: \"circle\", beat:\"8n\"},\n        \"u\": {keyPress: \"U\", note: \"B4\", color: \"40E0D0\", shape: \"circle\", beat:\"8n\"},\n        \"i\": {keyPress: \"I\", note: \"B4\", color: \"FCBA04\", shape: \"circle\", beat:\"8n\"},\n        \"o\": {keyPress: \"O\", note: \"C#5\", color: \"2479FC\", shape: \"circle\", beat:\"8n\"},\n        \"p\": {keyPress: \"P\", note: \"D#5\", color: \"00FA9A\", shape: \"circle\", beat:\"8n\"},\n        \n        \"a\": {keyPress: \"A\", note: \"C4\", color: \"FC2424\", shape: \"circle\", beat:\"8n\"},\n        \"s\": {keyPress: \"S\", note: \"D4\", color: \"96F550\", shape: \"circle\", beat:\"8n\"},\n        \"d\": {keyPress: \"D\", note: \"E4\", color: \"FF8C42\", shape: \"circle\", beat:\"8n\"},\n        \"f\": {keyPress: \"F\", note: \"F4\", color: \"E4FF1A\", shape: \"circle\", beat:\"8n\"},\n        \"g\": {keyPress: \"G\", note: \"G4\", color: \"6EEB83\", shape: \"circle\", beat:\"8n\"},\n        \"h\": {keyPress: \"H\", note: \"A4\", color: \"CCCCFF\", shape: \"circle\", beat:\"8n\"},\n        \"j\": {keyPress: \"J\", note: \"B4\", color: \"6AB547\", shape: \"circle\", beat:\"8n\"},\n        \"k\": {keyPress: \"K\", note: \"C5\", color: \"EC058E\", shape: \"circle\", beat:\"8n\"},\n        \"l\": {keyPress: \"L\", note: \"D5\", color: \"4D9DE0\", shape: \"circle\", beat:\"8n\"},\n        \"'\": {keyPress: \"apostrophe\", note: \"E5\", color: \"F9627D\", shape: \"circle\", beat:\"8n\"},\n        \n        \"z\": {keyPress: \"Z\", note: \"C3\", color: \"F17021\", shape: \"circle\", beat:\"8n\"},\n        \"x\": {keyPress: \"X\", note: \"D3\", color: \"EBF121\", shape: \"circle\", beat:\"8n\"},\n        \"c\": {keyPress: \"C\", note: \"E3\", color: \"90FCDA\", shape: \"circle\", beat:\"8n\"},\n        \"v\": {keyPress: \"V\", note: \"F3\", color: \"A6B1E1\", shape: \"circle\", beat:\"8n\"},\n        \"b\": {keyPress: \"B\", note: \"G3\", color: \"FF6F59\", shape: \"circle\", beat:\"8n\"},\n        \"n\": {keyPress: \"N\", note: \"A3\", color: \"4C6085\", shape: \"circle\", beat:\"8n\"},\n        \"m\": {keyPress: \"M\", note: \"B3\", color: \"F662E9\", shape: \"circle\", beat:\"8n\"},\n        \",\": {keyPress: \"comma\", note: \"C3\", color: \"90DDFC\", shape: \"circle\", beat:\"8n\"},\n        \".\": {keyPress: \"full-stop\", note: \"C4\", color: \"A50104\", shape: \"circle\", beat:\"8n\"},\n        \" \": {keyPress: \"space\", note: \"C4\", color: \"FFFFFF\", shape: \"circle\", beat:\"16n\"}\n        \n    })\n\n    const handleKeyDown = useCallback(({key}) => playKey(key), [])\n\n    useEffect(() => {\n        if(isMusicOn) {\n            document.addEventListener('keydown', handleKeyDown)\n        } \n        else {\n            document.removeEventListener('keydown', handleKeyDown)\n        }\n    }, [isMusicOn])\n\n    const synth = new Tone.Synth().toDestination();\n\n    const playKey = function(key) {\n        if (!Object.keys(keyMap).includes(key) || !isMusicOn) return;\n        if (isMusicOn){\n            const { note, beat } = keyMap[key]\n            synth.triggerAttackRelease(note, beat)\n            setLastKey(key)\n            setTimeout(() => setLastKey(\"\"), 250)\n        }\n    }\n\n    useEffect(() => {\n        if(!isPlayingSong && lastKey.length === 1 ){ \n            setSong([...song, lastKey]);\n            setText(song.join(\"\"))\n        }\n    }, [lastKey])\n\n    const replaySong = (song, index=0, time=350) => {\n        if (index >= song.length) {\n            setIsPlayingSong(false)\n            setPlayState(false)\n            return;\n        }\n        const currentKey = song[index]\n        playKey(currentKey)\n        setPlaceInSong(index + 1)\n        setLastTimeout(setTimeout(() => replaySong(song, index + 1), time))\n    }\n\n    useEffect(() => {\n        if (isPlayingSong && playState) {\n            replaySong(song, placeInSong)\n        } else if (!playState) {\n            clearTimeout(lastTimeout)\n        } else if (playState) {\n            setIsPlayingSong(true) \n            replaySong(song)\n        } \n    }, [playState])\n\n    const addFormSong = (formSong) => {\n        const newSong = {songData: song}\n        const newMusicItem = {...formSong, songData:song}\n        addPlaylist(newMusicItem)\n        setCurrentSong(newSong.songData)\n        setSong([])\n    }\n\n    const handlePauseResumeClick = (evt) => {\n        setPlayState((!isPlayingSong || !playState))\n    } \n\n    const replaySavedSong = (data) => {\n        replaySong(data, 0, 350)\n    }\n\n    const handleSwitchMode = () => {\n        isPlayMode ? setIsPlayMode(false) : setIsPlayMode(true)\n    }\n\n    const handleSaveForm = () => {\n        isShowingForm ? setIsShowingForm(false) : setIsShowingForm(true)\n        isMusicOn ? setIsMusicOn(false) : setIsMusicOn(true)\n    }\n\n    const handleDeleteNote = () => {\n        song.pop()\n    }\n\n\n    const Mode = () => {\n        if (isPlayMode) {\n          return (\n            <>\n            <Instrument pads={keyMap} onKeyClick={playKey} lastKey={lastKey} />\n            <button onClick={handlePauseResumeClick}>{(playState && isPlayingSong) ? \"Pause\" : \"Play\"}</button>\n            <p>Text: {text}</p>\n            <button onClick={handleDeleteNote}>Delete last note</button>\n            <button onClick={handleSaveForm}>ADD COMMENTS AND SAVE</button>\n            </>\n          )\n        }\n        return  <UserPlaylist playlist={playlist}  onDeleteSubmit={onDeleteSubmit} onReplaySaveSong={(data)=>replaySavedSong(data)} ></UserPlaylist>\n      };\n    \n    const FormMode = () => {\n        if (isShowingForm) {\n            return (\n                 <SongForm onFormSubmit= {(songForm) => addFormSong(songForm)}></SongForm>\n            )\n        }\n        return null;\n    }\n\n    return(\n        <>\n            <Visual lastKey={lastKey} pads={keyMap} />     \n            <Mode></Mode>\n            <button className=\"buttons\" onClick={handleSwitchMode}>{isPlayMode ? \"Show your playlist\" : \"Show keyboard\"} </button> \n            <FormMode></FormMode>\n        </>\n    )\n}\n\nexport default Play\n"]},"metadata":{},"sourceType":"module"}