{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maria/Desktop/codeclan/codeclan_work/week_15_JS_React_Project/music_visualizer/client/src/components/KeyVisual.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport anime, { random } from 'animejs';\nimport './KeyVisual.css';\nimport { useState, useEffect } from 'react';\nimport invert from 'invert-color';\nimport React from 'react';\nconst StyledKeyVisual = styled.div.attrs(props => {\n  return {\n    style: {\n      backgroundColor: '#' + props.color\n    }\n  };\n})`\n    width: 20px;\n    height: 20px;\n    border-radius: 100%;\n    margin: auto;\n    margin-top: 10vh;\n    z-index: 1;\n    grid-area: dot;\n`;\n_c = StyledKeyVisual;\nconst distance = 100;\nconst variance = 80;\nconst directionalTranslates = [{\n  x: 0,\n  y: 1\n}, {\n  x: 1,\n  y: 1\n}, {\n  x: 1,\n  y: 0\n}, {\n  x: 1,\n  y: -1\n}, {\n  x: 0,\n  y: -1\n}, {\n  x: -1,\n  y: -1\n}, {\n  x: -1,\n  y: 0\n}, {\n  x: -1,\n  y: 1\n}];\n\nconst KeyVisual = ({\n  color,\n  playState,\n  padKey\n}) => {\n  _s();\n\n  const [animations, setAnimations] = useState(null);\n  const [circles, setCircles] = useState([]);\n\n  const createCircles = () => {\n    let newCircles = [];\n    directionalTranslates.forEach((translation, i) => {\n      newCircles = [...newCircles, /*#__PURE__*/_jsxDEV(StyledKeyVisual, {\n        color: color,\n        playState: playState,\n        className: `${padKey}-visual-${i}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 42\n      }, this)];\n    });\n    setCircles(newCircles);\n  };\n\n  useEffect(() => {\n    let newAnimations = [];\n    directionalTranslates.forEach((translation, i) => {\n      newAnimations = [...newAnimations, anime({\n        targets: `div.${padKey}-visual-${i}`,\n        autoplay: false,\n        backgroundColor: invert('#' + color).padStart(6, \"0\"),\n        borderRadius: '20%',\n        translateY: [{\n          value: translation.y * (distance + Math.floor(Math.random() * variance)),\n          duration: 545\n        }],\n        translateX: [{\n          value: translation.x * (distance + Math.floor(Math.random() * variance)),\n          duration: 545\n        }],\n        scale: [1, 6],\n        opacity: [{\n          value: '0%',\n          duration: 0\n        }, {\n          value: '100%',\n          duration: 90\n        }, {\n          value: '80%',\n          duration: 50\n        }, {\n          value: '70%',\n          duration: 30\n        }, {\n          value: '0%',\n          duration: 375\n        }],\n        easing: 'easeInOutBounce'\n      })];\n    });\n    setAnimations(newAnimations);\n  }, [circles]);\n  useEffect(() => {\n    if (playState) {\n      console.log(animations);\n      animations.forEach(animation => {\n        animation.restart();\n        animation.play();\n      });\n    }\n  }, [playState]);\n  useEffect(() => {\n    createCircles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animation-container fireworks\",\n      children: circles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(KeyVisual, \"BCAWr7fUTnG21xrUrja1DNHkheU=\");\n\n_c2 = KeyVisual;\nexport default KeyVisual;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledKeyVisual\");\n$RefreshReg$(_c2, \"KeyVisual\");","map":{"version":3,"sources":["/Users/maria/Desktop/codeclan/codeclan_work/week_15_JS_React_Project/music_visualizer/client/src/components/KeyVisual.js"],"names":["styled","anime","random","useState","useEffect","invert","React","StyledKeyVisual","div","attrs","props","style","backgroundColor","color","distance","variance","directionalTranslates","x","y","KeyVisual","playState","padKey","animations","setAnimations","circles","setCircles","createCircles","newCircles","forEach","translation","i","newAnimations","targets","autoplay","padStart","borderRadius","translateY","value","Math","floor","duration","translateX","scale","opacity","easing","console","log","animation","restart","play"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport anime, { random } from 'animejs';\nimport './KeyVisual.css'\nimport { useState, useEffect } from 'react';\nimport invert from 'invert-color'\nimport React from 'react'\n\nconst StyledKeyVisual = styled.div.attrs(props => {\n    return {\n        style:{\n            backgroundColor: '#'+props.color\n        }\n    }\n})`\n    width: 20px;\n    height: 20px;\n    border-radius: 100%;\n    margin: auto;\n    margin-top: 10vh;\n    z-index: 1;\n    grid-area: dot;\n`\n\nconst distance = 100;\nconst variance = 80;\nconst directionalTranslates = [\n    {\n        x: 0,\n        y: 1\n    },\n    {\n        x: 1,\n        y: 1\n    },\n    {\n        x: 1,\n        y: 0\n    },\n    {\n        x: 1,\n        y: -1\n    },\n    {\n        x: 0,\n        y: -1\n    },\n    {\n        x: -1,\n        y: -1\n    },\n    {\n        x: -1,\n        y: 0\n    },\n    {\n        x: -1,\n        y: 1\n    },\n]\n\nconst KeyVisual = ({color, playState, padKey}) => {\n\n    const [animations, setAnimations] = useState(null)\n    const [circles, setCircles] = useState([])\n\n    const createCircles = () => {\n        let newCircles = []\n        directionalTranslates.forEach((translation, i) => {\n            newCircles = [...newCircles, <StyledKeyVisual color={color} playState={playState} className={`${padKey}-visual-${i}`}/>]\n        })\n        setCircles(newCircles)\n    }\n\n    useEffect(() => {\n        let newAnimations = []\n        directionalTranslates.forEach((translation, i) => {\n            newAnimations = [...newAnimations, anime({\n                targets: `div.${padKey}-visual-${i}`,\n                autoplay: false,\n                backgroundColor: invert('#'+color).padStart(6,\"0\"),\n                borderRadius: '20%',\n                translateY:[\n                    {value: (translation.y * (distance + Math.floor(Math.random() * variance))), duration: 545},\n                ],\n                translateX:[\n                    {value: (translation.x * (distance + Math.floor(Math.random() * variance))), duration: 545}\n                ],\n                scale: [1, 6],\n                opacity: [\n                    {value: '0%', duration: 0},\n                    {value: '100%', duration: 90},\n                    {value: '80%', duration: 50},\n                    {value: '70%', duration: 30},\n                    {value: '0%', duration: 375}\n                ],\n                easing: 'easeInOutBounce'\n            })]\n        })\n        setAnimations(newAnimations)\n    }, [circles])\n\n    useEffect(() => {\n        if (playState) {\n            console.log(animations)\n            animations.forEach(animation => {\n                animation.restart()\n                animation.play()    \n            })\n        }\n    }, [playState])\n\n    useEffect(() =>{\n        createCircles()\n    }, [])\n\n    return(\n        <>\n            <div className=\"animation-container fireworks\">\n                {circles}\n            </div>\n        </>\n    )\n}\n\nexport default KeyVisual;"]},"metadata":{},"sourceType":"module"}