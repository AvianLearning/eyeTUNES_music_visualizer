{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maria/Desktop/codeclan/codeclan_work/week_15_JS_React_Project/music_visualizer/client/src/components/Key.js\",\n    _s = $RefreshSig$();\n\nimport * as Tone from 'tone';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nlet Pad = styled.li` \nheight: 5vh;\nwidth: 5vw;\nmargin: auto;\nborder: 2px solid white;\ncolor: white;\nfont-size: 20pt;\ntext-align: center;\n`;\n\nconst Key = ({\n  individualPad,\n  onKeyClick,\n  isLastPad\n}) => {\n  _s();\n\n  const [currentColour, setCurrentColour] = useState(false); // When we click 'a' on keyboard - we want note to sound, and background colour to change\n\n  let StyledPad = styled(Pad).attrs(props => ({\n    style: {\n      backgroundColor: \"black\"\n    }\n  }))``;\n\n  if (isLastPad) {\n    StyledPad = styled(Pad).attrs(props => ({\n      style: {\n        backgroundColor: props.color\n      }\n    }))``;\n  }\n\n  console.log(individualPad.keyPress);\n  console.log(individualPad.color);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onKeyClick,\n    children: /*#__PURE__*/_jsxDEV(StyledPad, {\n      color: individualPad.color,\n      children: individualPad.keyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Key, \"JEZYTiKD53+MI3J2KY1qnWTs9LA=\");\n\n_c = Key;\nexport default Key;\n\nvar _c;\n\n$RefreshReg$(_c, \"Key\");","map":{"version":3,"sources":["/Users/maria/Desktop/codeclan/codeclan_work/week_15_JS_React_Project/music_visualizer/client/src/components/Key.js"],"names":["Tone","styled","useState","Pad","li","Key","individualPad","onKeyClick","isLastPad","currentColour","setCurrentColour","StyledPad","attrs","props","style","backgroundColor","color","console","log","keyPress"],"mappings":";;;;;AAAA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,IAAIC,GAAG,GAAGF,MAAM,CAACG,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA;AAA5B,CAAD,KAA4C;AAAA;;AAEpD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD,CAFoD,CAIpD;;AACA,MAAIS,SAAS,GAAGV,MAAM,CAACE,GAAD,CAAN,CAAYS,KAAZ,CAAkBC,KAAK,KAAK;AACxCC,IAAAA,KAAK,EAAE;AACHC,MAAAA,eAAe,EAAE;AADd;AADiC,GAAL,CAAvB,CAIZ,EAJJ;;AAMA,MAAIP,SAAJ,EAAe;AACXG,IAAAA,SAAS,GAAGV,MAAM,CAACE,GAAD,CAAN,CAAYS,KAAZ,CAAkBC,KAAK,KAAK;AACpCC,MAAAA,KAAK,EAAE;AACHC,QAAAA,eAAe,EAAEF,KAAK,CAACG;AADpB;AAD6B,KAAL,CAAvB,CAIR,EAJJ;AAMH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,aAAa,CAACa,QAA1B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYZ,aAAa,CAACU,KAA1B;AACA,sBACI;AAAK,IAAA,OAAO,EAAET,UAAd;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAED,aAAa,CAACU,KAAhC;AAAA,gBAAwCV,aAAa,CAACa;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1BD;;GAAMd,G;;KAAAA,G;AA4BF,eAAeA,GAAf","sourcesContent":["import * as Tone from 'tone';\nimport styled from 'styled-components';\nimport { useState } from 'react';\n\nlet Pad = styled.li` \nheight: 5vh;\nwidth: 5vw;\nmargin: auto;\nborder: 2px solid white;\ncolor: white;\nfont-size: 20pt;\ntext-align: center;\n`\n\nconst Key = ({individualPad, onKeyClick, isLastPad}) => {\n    \n    const [currentColour, setCurrentColour] = useState(false);\n    \n    // When we click 'a' on keyboard - we want note to sound, and background colour to change\n    let StyledPad = styled(Pad).attrs(props => ({\n        style: {\n            backgroundColor: \"black\"\n        }\n    }))`` \n    \n    if (isLastPad) {\n        StyledPad = styled(Pad).attrs(props => ({\n            style: {\n                backgroundColor: props.color\n            }\n        }))``\n            \n    }\n    console.log(individualPad.keyPress)\n    console.log(individualPad.color)\n    return (\n        <div onClick={onKeyClick}>\n            <StyledPad color={individualPad.color}>{individualPad.keyPress}</StyledPad>\n        </div>\n    )\n}\n    \n    export default Key"]},"metadata":{},"sourceType":"module"}