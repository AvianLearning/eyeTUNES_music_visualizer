{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maria/Desktop/codeclan/codeclan_work/week_15_JS_React_Project/music_visualizer/client/src/components/KeyVisual.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport anime from 'animejs';\nimport { useState, useEffect } from 'react';\nconst StyledKeyVisual = styled.div.attrs(props => {\n  return {\n    style: {\n      // animationPlayState: (props.play) ? \"running\" : \"paused\",\n      backgroundColor: props.color // backgroundImage: props.shape\n\n    }\n  };\n})`\n    position: centre;\n    width: 50px;\n    height: 50px;\n    border-radius: 100%;\n    margin: auto;\n    margin-top: 10vh;\n`;\n_c = StyledKeyVisual;\nconst SquareVisual = styled(StyledKeyVisual)`\n    width: 5px;\n    height: 5px;\n    border-radius: 0%;\n`;\n_c2 = SquareVisual;\nconst SquareVisualBig = styled(StyledKeyVisual)`\n    width: 10px;\n    height: 10px;\n    border-radius: 0%;\n`; // const TriangleVisualBig = styled(StyledKeyVisual)`\n//     width: 15px;\n//     height: 15px;\n//     border-left: 50px solid transparent;\n//     border-right: 50px solid transparent;\n//     border-bottom: 100px solid red;\n// `\n\n_c3 = SquareVisualBig;\n\nconst KeyVisual = ({\n  color,\n  playState,\n  padKey\n}) => {\n  _s();\n\n  const [animation, setAnimation] = useState(null);\n  useEffect(() => {\n    setAnimation(anime({\n      targets: `div.${padKey}-visual`,\n      autoplay: false,\n      translateY: [{\n        value: 100,\n        duration: 375\n      } // {value: 0, duration: 350}\n      ],\n      translateX: [{\n        value: 0,\n        duration: 375\n      } // {value: 0, duration: 350}\n      ],\n      translateZ: [{\n        value: 0,\n        duration: 375\n      }],\n      scale: [4, 10],\n      opacity: [{\n        value: '0%',\n        duration: 0\n      }, {\n        value: '100%',\n        duration: 100\n      }, {\n        value: '0%',\n        duration: 500\n      }],\n      easing: 'easeOutBounce'\n    }));\n  }, []);\n  useEffect(() => {\n    if (!animation) return;\n\n    if (playState) {\n      animation.play();\n    }\n  }, [playState]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledKeyVisual, {\n      color: color,\n      playState: playState,\n      className: `${padKey}-visual`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SquareVisualBig, {\n      color: color,\n      playState: playState,\n      className: `${padKey}-visual`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SquareVisual, {\n      color: color,\n      playState: playState,\n      className: `${padKey}-visual`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(KeyVisual, \"T9qpwQPdmvnr0l9kjZjXlpgoK/I=\");\n\n_c4 = KeyVisual;\nexport default KeyVisual;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledKeyVisual\");\n$RefreshReg$(_c2, \"SquareVisual\");\n$RefreshReg$(_c3, \"SquareVisualBig\");\n$RefreshReg$(_c4, \"KeyVisual\");","map":{"version":3,"sources":["/Users/maria/Desktop/codeclan/codeclan_work/week_15_JS_React_Project/music_visualizer/client/src/components/KeyVisual.js"],"names":["styled","anime","useState","useEffect","StyledKeyVisual","div","attrs","props","style","backgroundColor","color","SquareVisual","SquareVisualBig","KeyVisual","playState","padKey","animation","setAnimation","targets","autoplay","translateY","value","duration","translateX","translateZ","scale","opacity","easing","play"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport anime from 'animejs';\nimport { useState, useEffect } from 'react';\n\nconst StyledKeyVisual = styled.div.attrs(props => {\n    return {\n        style:{\n            // animationPlayState: (props.play) ? \"running\" : \"paused\",\n            backgroundColor: props.color,\n            // backgroundImage: props.shape\n\n        }\n    }\n})`\n    position: centre;\n    width: 50px;\n    height: 50px;\n    border-radius: 100%;\n    margin: auto;\n    margin-top: 10vh;\n`\n\nconst SquareVisual = styled(StyledKeyVisual)`\n    width: 5px;\n    height: 5px;\n    border-radius: 0%;\n`\nconst SquareVisualBig = styled(StyledKeyVisual)`\n    width: 10px;\n    height: 10px;\n    border-radius: 0%;\n`\n\n// const TriangleVisualBig = styled(StyledKeyVisual)`\n//     width: 15px;\n//     height: 15px;\n//     border-left: 50px solid transparent;\n//     border-right: 50px solid transparent;\n//     border-bottom: 100px solid red;\n// `\n\nconst KeyVisual = ({color, playState, padKey}) => {\n\n    const [animation, setAnimation] = useState(null)\n\n    useEffect(()=> {\n        setAnimation(anime({\n            targets: `div.${padKey}-visual`,\n            autoplay: false,\n            translateY:[\n                {value: 100, duration: 375},\n                // {value: 0, duration: 350}\n            ],\n            translateX:[\n                {value: 0, duration: 375},\n                // {value: 0, duration: 350}\n            ],\n            translateZ:[\n                {value: 0, duration: 375},\n            ],\n            scale: [4, 10],\n            opacity: [\n                {value: '0%', duration: 0},\n                {value: '100%', duration: 100},\n                {value: '0%', duration: 500}\n            ],\n            easing: 'easeOutBounce'\n        }))\n    }, [])\n\n    useEffect(() => {\n        if (!animation) return;\n        if (playState) {\n            animation.play()\n        }\n    }, [playState])\n\n    return(\n        <>\n            <StyledKeyVisual color={color} playState={playState} className={`${padKey}-visual`}/>\n            <SquareVisualBig color={color} playState={playState} className={`${padKey}-visual`}/>\n            {/* <TriangleVisualBig color={color} playState={playState} className={`${padKey}-visual`}/> */}\n            <SquareVisual color={color} playState={playState} className={`${padKey}-visual`}/>\n            \n        </>\n    )\n}\n\nexport default KeyVisual;"]},"metadata":{},"sourceType":"module"}